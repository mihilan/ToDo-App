{"version":3,"sources":["components/Form.js","components/List.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","input","setInput","todo","setTodo","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","List","todos","map","item","filter","el","Todo","filtered","App","useState","status","setFiltered","useEffect","getLocal","filterHandler","saveLocal","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfa310da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({input,setInput,todo,setTodo,setStatus})=>{\r\n\r\n  const inputHandler = (e)=>{\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e)=>{\r\n    e.preventDefault();\r\n    setTodo([...todo,{text:input,completed:false,id:Math.random()*1000}]);\r\n    setInput(\"\");\r\n  }\r\n\r\n  const statusHandler = (e)=>{\r\n    setStatus(e.target.value);\r\n  }\r\n  return(\r\n    <form>\r\n      <input value = {input} onChange={inputHandler} type =\"text\" className=\"todo-input\"/>\r\n      <button onClick={submitHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All Task</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"Uncompleted\">Yet to do</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nconst List =({text,todo,setTodo,todos})=>{\r\n  const deletetodo = ()=>{\r\n    setTodo(todo.filter((el)=>el.id !== todos.id));\r\n  }\r\n  const completetodo = ()=>{\r\n    setTodo(todo.map(item=>{\r\n      if(item.id === todos.id){\r\n        return {\r\n          ...item,\r\n          completed: !item.completed,\r\n        };\r\n\r\n      }\r\n      return item;\r\n\r\n    })\r\n  );\r\n\r\n  };\r\n\r\n  return(\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todos.completed ? \"completed\" :  \"\"}`}>{text}</li>\r\n      <button onClick={completetodo} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deletetodo} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport List from './List'\r\nconst Todo = ({todo,setTodo,filtered})=>{\r\n  return(\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filtered.map((todos)=>(\r\n          <List\r\n          text={todos.text}\r\n          key={todos.id}\r\n          todos={todos}\r\n          todo={todo}\r\n          setTodo={setTodo}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo;\r\n","\nimport React,{useState,useEffect} from 'react';\nimport Form from './components/Form'\nimport Todo from './components/Todo'\n//import List from './components/List'\nimport './App.css'\n\nfunction App() {\n  const [input,setInput] = useState(\"\");\n  const [todo,setTodo] = useState([]);\n  const [status,setStatus] = useState(\"All Task\");\n  const [filtered,setFiltered] = useState([]);\n\n  useEffect(()=>{\n    getLocal();\n  },[])\n\n  useEffect(()=>{\n    filterHandler();\n    saveLocal();\n  },[todo,status])\n\n  const filterHandler = ()=>{\n    switch (status){\n      case \"completed\":\n        setFiltered(todo.filter((todo)=>todo.completed === true));\n        break;\n      case \"Uncompleted\":\n        setFiltered(todo.filter((todo)=>todo.completed === false));\n        break;\n      default:\n        setFiltered(todo);\n        break;\n    }\n  }\n\n  const saveLocal = ()=>{\n      localStorage.setItem(\"todo\",JSON.stringify(todo));\n  };\n\n  const getLocal = ()=>{\n    if(localStorage.getItem(\"todo\")===null){\n      localStorage.setItem(\"todo\",JSON.stringify([]));\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todo\"))\n      setTodo(todoLocal);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Make Your Todo List</h1>\n      </header>\n      <Form input = {input} todo ={todo} setTodo={setTodo}\n      setInput={setInput} setStatus={setStatus}  />\n      <Todo todo={todo} setTodo={setTodo} filtered={filtered}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}